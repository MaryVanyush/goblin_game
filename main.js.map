{"version":3,"file":"main.js","mappings":"mBAAe,MAAMA,EACnBC,YAAYC,GAERC,KAAKD,QADgB,iBAAZA,EACMA,EAEAE,SAASC,iBAAiBH,GAE3CC,KAAKG,SAAW,EAEhBH,KAAKI,gBAELJ,KAAKK,IAAMJ,SAASK,cAAc,QAClCN,KAAKO,KAAON,SAASK,cAAc,SACnCN,KAAKQ,QAAUR,KAAKQ,QAAQC,KAAKT,MACjCA,KAAKU,MAAQV,KAAKU,MAAMD,KAAKT,MAC7BA,KAAKW,OAASX,KAAKW,OAAOF,KAAKT,MAC/BA,KAAKY,SAAWZ,KAAKY,SAASH,KAAKT,MACnCA,KAAKD,QAAQc,SAASC,GAAOA,EAAGC,iBAAiB,QAASf,KAAKQ,UACjE,CAEAJ,gBACEJ,KAAKG,SAAWa,aAAY,KAC1B,MAAMC,EAAOhB,SAASC,iBAAiB,UACvCe,EAAKJ,SAASC,GAAOA,EAAGI,UAAUC,OAAO,YACzBF,EAAKG,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,SAC7CL,UAAUM,IAAI,SAAS,GAC9B,IACL,CAEAhB,QAAQiB,GACN,MAAM,OAAEC,GAAWD,EACbE,EAAQD,EAAOE,QAAQ,UACf,OAAVD,IAGAA,EAAMT,UAAUW,SAAS,UAC3B7B,KAAKU,QAELV,KAAKW,SAET,CAEAD,QACEV,KAAKK,IAAIyB,aAAgB9B,KAAKK,IAAIyB,YAAe,EACjD,MAAMb,EAAOhB,SAASC,iBAAiB,UACvCe,EAAKJ,SAASC,GAAOA,EAAGI,UAAUC,OAAO,YACzBF,EAAKG,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,SAC7CL,UAAUM,IAAI,UACtBO,cAAc/B,KAAKG,UACnBH,KAAKI,eACP,CAEAO,SACEX,KAAKO,KAAKuB,aAAgB9B,KAAKO,KAAKuB,YAAe,EAClB,IAA3B9B,KAAKO,KAAKuB,aACd9B,KAAKY,UAET,CAEAA,WACEoB,MAAM,aACNhC,KAAKK,IAAIyB,YAAc,IACvB9B,KAAKO,KAAKuB,YAAc,IACxBC,cAAc/B,KAAKG,UACnBH,KAAKI,eACP,EC/DF6B,OAAOlB,iBAAiB,oBAAoB,KACF,IAAIlB,EAAW,iBAAiB,G","sources":["webpack://goblin_game/./src/components/game-widget/game-widget.js","webpack://goblin_game/./src/js/app.js"],"sourcesContent":["export default class GameWidget {\n  constructor(element) {\n    if (typeof element !== 'string') {\n      this.element = element;\n    } else {\n      this.element = document.querySelectorAll(element);\n    }\n    this.interval = 0;\n\n    this.startInterval();\n\n    this.hit = document.querySelector('.hit');\n    this.miss = document.querySelector('.miss');\n    this.onClick = this.onClick.bind(this);\n    this.onHit = this.onHit.bind(this);\n    this.onMiss = this.onMiss.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.element.forEach((el) => el.addEventListener('click', this.onClick));\n  }\n\n  startInterval() {\n    this.interval = setInterval(() => {\n      const cell = document.querySelectorAll('.field');\n      cell.forEach((el) => el.classList.remove('active'));\n      const element = cell[Math.floor(Math.random() * cell.length)];\n      element.classList.add('active');\n    }, 1000);\n  }\n\n  onClick(e) {\n    const { target } = e;\n    const field = target.closest('.field');\n    if (field === null) {\n      return;\n    }\n    if (field.classList.contains('active')) {\n      this.onHit();\n    } else {\n      this.onMiss();\n    }\n  }\n\n  onHit() {\n    this.hit.textContent = +(this.hit.textContent) + 1;\n    const cell = document.querySelectorAll('.field');\n    cell.forEach((el) => el.classList.remove('active'));\n    const element = cell[Math.floor(Math.random() * cell.length)];\n    element.classList.add('active');\n    clearInterval(this.interval);\n    this.startInterval();\n  }\n\n  onMiss() {\n    this.miss.textContent = +(this.miss.textContent) + 1;\n    if (+(this.miss.textContent) === 5) {\n      this.gameOver();\n    }\n  }\n\n  gameOver() {\n    alert('GAME OVER');\n    this.hit.textContent = '0';\n    this.miss.textContent = '0';\n    clearInterval(this.interval);\n    this.startInterval();\n  }\n}\n","import GameWidget from '../components/game-widget/game-widget';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  /* eslint-disable */ const gameWidget = new GameWidget('.playing-field');\n});\n"],"names":["GameWidget","constructor","element","this","document","querySelectorAll","interval","startInterval","hit","querySelector","miss","onClick","bind","onHit","onMiss","gameOver","forEach","el","addEventListener","setInterval","cell","classList","remove","Math","floor","random","length","add","e","target","field","closest","contains","textContent","clearInterval","alert","window"],"sourceRoot":""}